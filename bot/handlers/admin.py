import aiogram
import aiogram.filters
import aiogram.fsm.context
import bot.database.queries as queries
import bot.keyboards.reply as keyboards
import bot.states.user_states as states
import bot.utils.helpers as helpers

async def handle_remove_member(message: aiogram.types.Message, state: aiogram.fsm.context.FSMContext):
    """–ù–∞—á–∞–ª–æ —É–¥–∞–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã"""
    student = await queries.StudentQueries.get_by_tg_id(message.from_user.id)
    
    if not student or not student.get('team_memberships'):
        await message.answer("‚ùå –í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–æ–º–∞–Ω–¥–µ.")
        return
    
    team_membership = student['team_memberships'][0]
    team = team_membership['team']
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if team['admin']['id'] != student['id']:
        await message.answer("‚ùå –£–¥–∞–ª—è—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∫–æ–º–∞–Ω–¥—ã.")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥—ã (–∫—Ä–æ–º–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)
    teammates = await queries.StudentQueries.get_teammates(student['id'])
    
    if not teammates:
        await message.answer("üë• –í –∫–æ–º–∞–Ω–¥–µ –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (–∫—Ä–æ–º–µ –≤–∞—Å).")
        return
    
    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–º–µ–Ω –¥–ª—è –≤—ã–±–æ—Ä–∞
    member_names = [teammate['name'] for teammate in teammates]
    
    await state.update_data(teammates=teammates, team_id=team['id'])
    await state.set_state(states.MemberRemoval.member_selection)
    
    await message.answer(
        "üóë *–£–¥–∞–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã*\n\n"
        "‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∫–æ–º–∞–Ω–¥—ã:",
        reply_markup=keyboards.get_dynamic_keyboard(member_names, columns=2),
        parse_mode="Markdown"
    )

async def process_member_selection(message: aiogram.types.Message, state: aiogram.fsm.context.FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"""
    if message.text == "–û—Ç–º–µ–Ω–∞":
        await cancel_admin_action(message, state)
        return
    
    data = await state.get_data()
    teammates = data.get('teammates', [])
    
    # –ù–∞—Ö–æ–¥–∏–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞
    selected_member = None
    for teammate in teammates:
        if teammate['name'] == message.text:
            selected_member = teammate
            break
    
    if not selected_member:
        await message.answer("‚ùå –£—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω. –í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞:")
        return
    
    await state.update_data(selected_member=selected_member)
    await state.set_state(states.MemberRemoval.confirmation)
    
    await message.answer(
        f"‚ö†Ô∏è *–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è*\n\n"
        f"–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å *{selected_member['name']}* –∏–∑ –∫–æ–º–∞–Ω–¥—ã?\n\n"
        f"*–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!*\n"
        f"–£—á–∞—Å—Ç–Ω–∏–∫ –ø–æ—Ç–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º –∫–æ–º–∞–Ω–¥—ã.",
        reply_markup=keyboards.get_confirmation_keyboard("–£–¥–∞–ª–∏—Ç—å", "–û—Ç–º–µ–Ω–∞"),
        parse_mode="Markdown"
    )

async def confirm_member_removal(message: aiogram.types.Message, state: aiogram.fsm.context.FSMContext):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
    if message.text == "–£–¥–∞–ª–∏—Ç—å":
        data = await state.get_data()
        selected_member = data['selected_member']
        team_id = data['team_id']
        
        try:
            await queries.TeamQueries.remove_member(
                team_id=team_id,
                student_id=selected_member['id']
            )
            
            await state.clear()
            
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∞–¥–º–∏–Ω—Å–∫–æ–µ –º–µ–Ω—é
            keyboard = keyboards.get_main_menu_keyboard(is_admin=True, has_team=True)
            
            await message.answer(
                f"üóë *–£—á–∞—Å—Ç–Ω–∏–∫ —É–¥–∞–ª–µ–Ω*\n\n"
                f"üë§ {selected_member['name']} –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –∫–æ–º–∞–Ω–¥—ã",
                reply_markup=keyboard,
                parse_mode="Markdown"
            )
            
        except Exception as e:
            await message.answer(
                f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞: {str(e)}\n"
                f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
            )
            await state.clear()
    
    elif message.text == "–û—Ç–º–µ–Ω–∞":
        await cancel_admin_action(message, state)

async def handle_team_report(message: aiogram.types.Message):
    """–û—Ç—á–µ—Ç –æ –∫–æ–º–∞–Ω–¥–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    student = await queries.StudentQueries.get_by_tg_id(message.from_user.id)
    
    if not student or not student.get('team_memberships'):
        await message.answer("‚ùå –í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–æ–º–∞–Ω–¥–µ.")
        return
    
    team_membership = student['team_memberships'][0]
    team = team_membership['team']
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if team['admin']['id'] != student['id']:
        await message.answer("‚ùå –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –æ—Ç—á–µ—Ç –æ –∫–æ–º–∞–Ω–¥–µ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.")
        return
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥—ã –≤–∫–ª—é—á–∞—è –∞–¥–º–∏–Ω–∞
        teammates = await queries.StudentQueries.get_teammates(student['id'])
        all_members = teammates + [{'id': student['id'], 'name': student['name']}]
        
        report_text = f"üìä *–û—Ç—á–µ—Ç –æ –∫–æ–º–∞–Ω–¥–µ: {team['team_name']}*\n\n"
        
        for member in all_members:
            # –ü–æ–ª—É—á–∞–µ–º –æ—Ç—á–µ—Ç—ã —É—á–∞—Å—Ç–Ω–∏–∫–∞
            reports = await queries.ReportQueries.get_by_student(member['id'])
            reports_count = len(reports)
            
            # –ü–æ–ª—É—á–∞–µ–º –æ—Ü–µ–Ω–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Å—Ç–∞–≤–∏–ª —É—á–∞—Å—Ç–Ω–∏–∫
            ratings_given = await queries.RatingQueries.get_ratings_given_by_student(member['id'])
            ratings_given_count = len(ratings_given) if ratings_given else 0
            
            # –ü–æ–ª—É—á–∞–µ–º –æ—Ü–µ–Ω–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—É—á–∏–ª —É—á–∞—Å—Ç–Ω–∏–∫
            ratings_received = await queries.RatingQueries.get_who_rated_me(member['id'])
            ratings_received_count = len(ratings_received) if ratings_received else 0
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∞
            role_icon = "üëë" if member['id'] == student['id'] else "üë§"
            
            report_text += (
                f"{role_icon} *{member['name']}*\n"
                f"üìù –û—Ç—á–µ—Ç—ã: {reports_count}\n"
                f"‚≠ê –û—Ü–µ–Ω–æ–∫ –ø–æ—Å—Ç–∞–≤–∏–ª: {ratings_given_count}\n"
                f"‚≠ê –û—Ü–µ–Ω–æ–∫ –ø–æ–ª—É—á–∏–ª: {ratings_received_count}\n\n"
            )
        
        await message.answer(report_text, parse_mode="Markdown")
        
    except Exception as e:
        await message.answer(
            f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞: {str(e)}\n"
            f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
        )

async def cancel_admin_action(message: aiogram.types.Message, state: aiogram.fsm.context.FSMContext):
    """–û—Ç–º–µ–Ω–∞ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è"""
    await state.clear()
    keyboard = keyboards.get_main_menu_keyboard(is_admin=True, has_team=True)
    await message.answer("‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=keyboard)

def register_admin_handlers(dp: aiogram.Dispatcher):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
    # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    dp.message.register(handle_remove_member, aiogram.filters.Text("–£–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞"))
    dp.message.register(handle_team_report, aiogram.filters.Text("–û—Ç—á—ë—Ç –æ –∫–æ–º–∞–Ω–¥–µ"))
    
    # FSM –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞
    dp.message.register(process_member_selection, states.MemberRemoval.member_selection)
    dp.message.register(confirm_member_removal, states.MemberRemoval.confirmation)