"""
–ú–æ–¥—É–ª—å inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä –¥–ª—è Telegram –±–æ—Ç–∞.

–°–æ–∑–¥–∞–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
"""

import aiogram.types
import config

def get_confirmation_inline_keyboard(confirm_text: str = "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", cancel_text: str = "–û—Ç–º–µ–Ω–∞", confirm_data: str = "confirm", cancel_data: str = "cancel"):
    """Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"""
    return aiogram.types.InlineKeyboardMarkup(
        inline_keyboard=[
            [
                aiogram.types.InlineKeyboardButton(text=confirm_text, callback_data=confirm_data),
                aiogram.types.InlineKeyboardButton(text=cancel_text, callback_data=cancel_data)
            ]
        ]
    )

def get_roles_inline_keyboard():
    """Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏"""
    roles = [
        ("üìà Product owner", "role_po"),
        ("üéØ Scrum Master", "role_sm"), 
        ("üíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫", "role_dev"),
        ("üë• –£—á–∞—Å—Ç–Ω–∏–∫ –∫–æ–º–∞–Ω–¥—ã", "role_member")
    ]
    
    keyboard = []
    for i in range(0, len(roles), 2):
        row = [aiogram.types.InlineKeyboardButton(text=roles[i][0], callback_data=roles[i][1])]
        if i + 1 < len(roles):
            row.append(aiogram.types.InlineKeyboardButton(text=roles[i + 1][0], callback_data=roles[i + 1][1]))
        keyboard.append(row)
    
    keyboard.append([aiogram.types.InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")])
    
    return aiogram.types.InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_sprints_inline_keyboard():
    """Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Å–ø—Ä–∏–Ω—Ç–∞"""
    keyboard = []
    sprints = [f"–°–ø—Ä–∏–Ω—Ç ‚Ññ{i}" for i in range(1, config.MAX_SPRINT_NUMBER + 1)]
    
    for i in range(0, len(sprints), 3):
        row = []
        for j in range(3):
            if i + j < len(sprints):
                sprint_num = i + j + 1
                row.append(aiogram.types.InlineKeyboardButton(
                    text=sprints[i + j], 
                    callback_data=f"sprint_{sprint_num}"
                ))
        keyboard.append(row)
    
    keyboard.append([aiogram.types.InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")])
    return aiogram.types.InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_ratings_inline_keyboard():
    """Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –æ—Ü–µ–Ω–∫–∏"""
    keyboard = []
    
    # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞: 1-5
    row1 = []
    for i in range(config.MIN_RATING, 6):
        row1.append(aiogram.types.InlineKeyboardButton(text=f"‚≠ê {i}", callback_data=f"rating_{i}"))
    keyboard.append(row1)
    
    # –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞: 6-10
    row2 = []
    for i in range(6, config.MAX_RATING + 1):
        row2.append(aiogram.types.InlineKeyboardButton(text=f"‚≠ê {i}", callback_data=f"rating_{i}"))
    keyboard.append(row2)
    
    keyboard.append([aiogram.types.InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")])
    return aiogram.types.InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_dynamic_inline_keyboard(items: list[str], callback_prefix: str, columns: int = 2):
    """–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–ø–∏—Å–∫–æ–≤ (—É—á–∞—Å—Ç–Ω–∏–∫–∏, –æ—Ç—á–µ—Ç—ã –∏ —Ç.–¥.)"""
    keyboard = []
    
    for i in range(0, len(items), columns):
        row = []
        for j in range(columns):
            if i + j < len(items):
                item_index = i + j
                # –û–±—Ä–µ–∑–∞–µ–º –¥–ª–∏–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
                item_text = items[item_index]
                if len(item_text) > 20:
                    item_text = item_text[:17] + "..."
                    
                row.append(aiogram.types.InlineKeyboardButton(
                    text=item_text, 
                    callback_data=f"{callback_prefix}_{item_index}"
                ))
        keyboard.append(row)
    
    keyboard.append([aiogram.types.InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")])
    return aiogram.types.InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_skip_cancel_inline_keyboard(skip_text: str = "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", cancel_text: str = "‚ùå –û—Ç–º–µ–Ω–∞"):
    """Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å/–û—Ç–º–µ–Ω–∞"""
    return aiogram.types.InlineKeyboardMarkup(
        inline_keyboard=[
            [
                aiogram.types.InlineKeyboardButton(text=skip_text, callback_data="skip"),
                aiogram.types.InlineKeyboardButton(text=cancel_text, callback_data="cancel")
            ]
        ]
    )

# –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π

def get_team_registration_confirm_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥—ã"""
    return get_confirmation_inline_keyboard("‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", "‚ùå –û—Ç–º–µ–Ω–∞", "confirm_team_reg", cancel_data="cancel_team_reg")

def get_join_team_confirm_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ –∫–æ–º–∞–Ω–¥–µ"""
    return get_confirmation_inline_keyboard("‚úÖ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è", "‚ùå –û—Ç–º–µ–Ω–∞", "confirm_join_team", "cancel_join_team")

def get_report_confirm_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞"""
    return get_confirmation_inline_keyboard("üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å", "‚ùå –û—Ç–º–µ–Ω–∞", "confirm_report", "cancel_report")

def get_report_delete_confirm_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞"""
    return get_confirmation_inline_keyboard("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", "‚ùå –û—Ç–º–µ–Ω–∞", "confirm_delete_report", "cancel_delete_report")

def get_member_removal_confirm_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
    return get_confirmation_inline_keyboard("‚ö†Ô∏è –£–¥–∞–ª–∏—Ç—å", "‚ùå –û—Ç–º–µ–Ω–∞", "confirm_remove_member", "cancel_remove_member")

def get_review_confirm_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ü–µ–Ω–∫–∏"""
    return get_confirmation_inline_keyboard("‚≠ê –û—Ç–ø—Ä–∞–≤–∏—Ç—å", "‚ùå –û—Ç–º–µ–Ω–∞", "confirm_review", "cancel_review")

def get_team_member_management_keyboard(members, current_user_id, is_admin=False):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –∫–æ–º–∞–Ω–¥—ã"""
    keyboard = []
    
    if is_admin and len(members) > 1:  # –ú–æ–∂–Ω–æ —É–¥–∞–ª—è—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∫–æ–≥–æ —É–¥–∞–ª—è—Ç—å
        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ (–∫—Ä–æ–º–µ —Å–∞–º–æ–≥–æ –∞–¥–º–∏–Ω–∞)
        for member in members:
            if member.student.id != current_user_id:
                # –û–±—Ä–µ–∑–∞–µ–º –¥–ª–∏–Ω–Ω—ã–µ –∏–º–µ–Ω–∞ –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
                name = member.student.name
                if len(name) > 15:
                    name = name[:12] + "..."
                
                keyboard.append([
                    aiogram.types.InlineKeyboardButton(
                        text=f"‚úèÔ∏è {name}",
                        callback_data=f"edit_member_{member.student.id}"
                    ),
                    aiogram.types.InlineKeyboardButton(
                        text=f"üóëÔ∏è Delete",
                        callback_data=f"remove_member_{member.student.id}"
                    )
                ])
    
    return aiogram.types.InlineKeyboardMarkup(inline_keyboard=keyboard)