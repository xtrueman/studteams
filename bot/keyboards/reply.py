"""
–ú–æ–¥—É–ª—å reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä –¥–ª—è Telegram –±–æ—Ç–∞.

–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –±–æ—Ç—É.
"""

import aiogram.types
import config


def get_main_menu_keyboard(is_admin: bool = False, has_team: bool = False):
    """–°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    keyboard = aiogram.types.ReplyKeyboardMarkup(
        keyboard=[],
        resize_keyboard=True,
        one_time_keyboard=False
    )

    if not has_team:
        # –ù–µ–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        keyboard.keyboard.append([
            aiogram.types.KeyboardButton(text="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã"),
            aiogram.types.KeyboardButton(text="–ü–æ–º–æ—â—å")
        ])
    else:
        # –£—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥—ã
        row1 = [aiogram.types.KeyboardButton(text="–ú–æ—è –∫–æ–º–∞–Ω–¥–∞")]

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–û—Ç—á—ë—Ç –æ –∫–æ–º–∞–Ω–¥–µ" —Å–ø—Ä–∞–≤–∞ –æ—Ç "–ú–æ—è –∫–æ–º–∞–Ω–¥–∞" –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–∞—Ö
        if is_admin and config.ENABLE_REVIEWS:
            row1.append(aiogram.types.KeyboardButton(text="–û—Ç—á—ë—Ç –æ –∫–æ–º–∞–Ω–¥–µ"))

        row2 = [
            aiogram.types.KeyboardButton(text="–ú–æ–∏ –æ—Ç—á—ë—Ç—ã"),
            aiogram.types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç")
        ]

        if config.ENABLE_REVIEWS:
            row4 = [
                aiogram.types.KeyboardButton(text="–û—Ü–µ–Ω–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥—ã"),
                aiogram.types.KeyboardButton(text="–ö—Ç–æ –º–µ–Ω—è –æ—Ü–µ–Ω–∏–ª?")
            ]
            keyboard.keyboard.append(row4)

        keyboard.keyboard.extend([row1, row2])

        # –ü–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–æ–∫–∞ - —Å–ª—É–∂–µ–±–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        last_row = [
            aiogram.types.KeyboardButton(text="–ü–æ–º–æ—â—å"),
            aiogram.types.KeyboardButton(text="–û–±–Ω–æ–≤–∏—Ç—å")
        ]
        keyboard.keyboard.append(last_row)

    return keyboard


def get_confirmation_keyboard(confirm_text: str = "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", cancel_text: str = "–û—Ç–º–µ–Ω–∞"):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"""
    return aiogram.types.ReplyKeyboardMarkup(
        keyboard=[
            [
                aiogram.types.KeyboardButton(text=confirm_text),
                aiogram.types.KeyboardButton(text=cancel_text)
            ]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )


def get_roles_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏"""
    roles = ["Product owner", "Scrum Master", "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫", "–£—á–∞—Å—Ç–Ω–∏–∫ –∫–æ–º–∞–Ω–¥—ã"]
    keyboard = aiogram.types.ReplyKeyboardMarkup(
        keyboard=[],
        resize_keyboard=True,
        one_time_keyboard=True
    )

    for i in range(0, len(roles), 2):
        row = [aiogram.types.KeyboardButton(text=roles[i])]
        if i + 1 < len(roles):
            row.append(aiogram.types.KeyboardButton(text=roles[i + 1]))
        keyboard.keyboard.append(row)

    keyboard.keyboard.append([aiogram.types.KeyboardButton(text="–û—Ç–º–µ–Ω–∞")])
    return keyboard


def get_sprints_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Å–ø—Ä–∏–Ω—Ç–∞"""
    keyboard = aiogram.types.ReplyKeyboardMarkup(
        keyboard=[],
        resize_keyboard=True,
        one_time_keyboard=True
    )

    sprints = [f"–°–ø—Ä–∏–Ω—Ç ‚Ññ{i}" for i in range(1, config.MAX_SPRINT_NUMBER + 1)]

    for i in range(0, len(sprints), 3):
        row = []
        for j in range(3):
            if i + j < len(sprints):
                row.append(aiogram.types.KeyboardButton(text=sprints[i + j]))
        keyboard.keyboard.append(row)

    keyboard.keyboard.append([aiogram.types.KeyboardButton(text="–û—Ç–º–µ–Ω–∞")])
    return keyboard


def get_ratings_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –æ—Ü–µ–Ω–∫–∏"""
    keyboard = aiogram.types.ReplyKeyboardMarkup(
        keyboard=[],
        resize_keyboard=True,
        one_time_keyboard=True
    )

    # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞: 1-5
    row1 = [aiogram.types.KeyboardButton(text=str(i)) for i in range(config.MIN_RATING, 6)]
    # –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞: 6-10
    row2 = [aiogram.types.KeyboardButton(text=str(i)) for i in range(6, config.MAX_RATING + 1)]

    keyboard.keyboard.extend([row1, row2])
    keyboard.keyboard.append([aiogram.types.KeyboardButton(text="–û—Ç–º–µ–Ω–∞")])
    return keyboard


def get_dynamic_keyboard(items: list[str], columns: int = 2):
    """–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–ø–∏—Å–∫–æ–≤ (—É—á–∞—Å—Ç–Ω–∏–∫–∏, –æ—Ç—á–µ—Ç—ã –∏ —Ç.–¥.)"""
    keyboard = aiogram.types.ReplyKeyboardMarkup(
        keyboard=[],
        resize_keyboard=True,
        one_time_keyboard=True
    )

    for i in range(0, len(items), columns):
        row = []
        for j in range(columns):
            if i + j < len(items):
                row.append(aiogram.types.KeyboardButton(text=items[i + j]))
        keyboard.keyboard.append(row)

    keyboard.keyboard.append([aiogram.types.KeyboardButton(text="–û—Ç–º–µ–Ω–∞")])
    return keyboard


def get_admin_panel_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    return aiogram.types.ReplyKeyboardMarkup(
        keyboard=[
            [
                aiogram.types.KeyboardButton(text="üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥—ã"),
                aiogram.types.KeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞")
            ],
            [
                aiogram.types.KeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞"),
                aiogram.types.KeyboardButton(text="–ù–∞–∑–∞–¥")
            ]
        ],
        resize_keyboard=True,
        one_time_keyboard=False
    )
