# Конфигурация Nginx для StudTeams веб-приложения
# Скопируйте этот файл в /etc/nginx/sites-available/studteams
# и создайте симлинк в /etc/nginx/sites-enabled/
# sudo ln -s /etc/nginx/sites-available/studteams /etc/nginx/sites-enabled/

# Апстрим для FastAPI приложения
upstream studteams_app {
    server 127.0.0.1:8000;
}

# HTTP сервер
server {
    listen 80;
    listen [::]:80;
    
    server_name studteams.example.com;  # Замените на ваш домен
    
    # Логирование
    access_log /var/log/nginx/studteams-access.log;
    error_log /var/log/nginx/studteams-error.log;
    
    # Корень проекта
    root /srv/studteams;
    
    # Максимальный размер загружаемых файлов
    client_max_body_size 5M;
    
    # Обработка статических файлов напрямую через Nginx
    location /static/ {
        alias /srv/studteams/web/static/;
        expires 30d;
        add_header Cache-Control "public, immutable";
        
        # Обработка различных типов файлов
        location ~* \.(jpg|jpeg|png|gif|ico|svg)$ {
            expires 90d;
            add_header Cache-Control "public, immutable";
        }
        
        location ~* \.(css|js)$ {
            expires 7d;
            add_header Cache-Control "public, must-revalidate";
        }
        
        location ~* \.(woff|woff2|ttf|otf|eot)$ {
            expires 90d;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*";
        }
    }
    
    # Favicon
    location = /favicon.ico {
        alias /srv/studteams/web/static/favicon.ico;
        access_log off;
        log_not_found off;
        expires 90d;
    }
    
    # robots.txt
    location = /robots.txt {
        alias /srv/studteams/web/static/robots.txt;
        access_log off;
        log_not_found off;
    }
    
    # Проксирование всех остальных запросов к FastAPI приложению
    location / {
        proxy_pass http://studteams_app;
        
        # Заголовки для правильной работы с прокси
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support (на случай, если понадобится в будущем)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Таймауты
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Буферизация
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }
    
    # Отключаем доступ к скрытым файлам
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Отключаем доступ к Python файлам
    location ~* \.(py|pyc|pyo)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Отключаем доступ к конфигурационным файлам
    location ~* \.(yaml|yml|conf|ini|env)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# HTTPS сервер (раскомментируйте после получения SSL сертификата)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     
#     server_name studteams.example.com;
#     
#     # SSL сертификаты (получите через Let's Encrypt)
#     ssl_certificate /etc/letsencrypt/live/studteams.example.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/studteams.example.com/privkey.pem;
#     
#     # SSL настройки
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     
#     # HSTS (раскомментируйте после проверки что всё работает)
#     # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#     
#     # Остальная конфигурация такая же как для HTTP
#     # (скопируйте блоки location из HTTP секции)
# }

# Редирект с HTTP на HTTPS (раскомментируйте после настройки HTTPS)
# server {
#     listen 80;
#     listen [::]:80;
#     server_name studteams.example.com;
#     return 301 https://$server_name$request_uri;
# }
